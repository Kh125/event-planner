# Generated by Django 5.1.1 on 2025-07-14 16:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0004_event_is_public_event_registration_closes_and_more'),
        ('organizations', '0004_remove_organizationinvitation_is_registration_approved'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('org_invitation_sent', 'Organization Invitation Sent'), ('org_invitation_accepted', 'Organization Invitation Accepted'), ('org_invitation_rejected', 'Organization Invitation Rejected'), ('event_created', 'Event Created'), ('event_updated', 'Event Updated'), ('event_cancelled', 'Event Cancelled'), ('event_published', 'Event Published'), ('attendee_registered', 'Attendee Registered'), ('attendee_confirmed', 'Registration Confirmed'), ('attendee_rejected', 'Registration Rejected'), ('attendee_waitlisted', 'Added to Waitlist'), ('attendee_promoted', 'Promoted from Waitlist'), ('event_reminder_24h', 'Event Reminder (24 hours)'), ('event_reminder_1h', 'Event Reminder (1 hour)')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('websocket', 'WebSocket'), ('sms', 'SMS')], max_length=20)),
                ('subject_template', models.CharField(blank=True, max_length=255)),
                ('body_template', models.TextField(blank=True)),
                ('title_template', models.CharField(blank=True, max_length=255)),
                ('message_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': {('type', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('org_invitation_sent', 'Organization Invitation Sent'), ('org_invitation_accepted', 'Organization Invitation Accepted'), ('org_invitation_rejected', 'Organization Invitation Rejected'), ('event_created', 'Event Created'), ('event_updated', 'Event Updated'), ('event_cancelled', 'Event Cancelled'), ('event_published', 'Event Published'), ('attendee_registered', 'Attendee Registered'), ('attendee_confirmed', 'Registration Confirmed'), ('attendee_rejected', 'Registration Rejected'), ('attendee_waitlisted', 'Added to Waitlist'), ('attendee_promoted', 'Promoted from Waitlist'), ('event_reminder_24h', 'Event Reminder (24 hours)'), ('event_reminder_1h', 'Event Reminder (1 hour)')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('websocket', 'WebSocket'), ('sms', 'SMS')], max_length=20)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='events.event')),
                ('invitation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='organizations.organizationinvitation')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='organizations.organization')),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['type', 'status'], name='notificatio_type_c83c59_idx'), models.Index(fields=['recipient_email', 'created_at'], name='notificatio_recipie_5d9286_idx'), models.Index(fields=['event', 'type'], name='notificatio_event_i_0ac5ed_idx')],
            },
        ),
    ]
